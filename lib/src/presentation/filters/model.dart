import 'package:flutter/material.dart';

enum FilterType {
  normal,
  autoFix,
  sepia,
  greyScale,
  brightness,
  quantization,
  vintage,
  blackAndWhite,
  polaroid,
  duotone,
  warmVintage,
  vignette,
  kodachrome,
  technicolor,
  lomo,
  saturate,
  amaro,
}

class ColorFilters {
  static ColorFilter? getColorFilter(FilterType filterType) {
    switch (filterType) {
      case FilterType.normal:
        return const ColorFilter.matrix(<double>[
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
        ]);
      case FilterType.autoFix:
        return const ColorFilter.matrix(<double>[
          1.2,
          0,
          0,
          0,
          0,
          0,
          1.2,
          0,
          0,
          0,
          0,
          0,
          1.2,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
        ]);
      case FilterType.sepia:
        return const ColorFilter.matrix(<double>[
          0.393,
          0.769,
          0.189,
          0,
          0,
          0.349,
          0.686,
          0.168,
          0,
          0,
          0.272,
          0.534,
          0.131,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
        ]);
      case FilterType.greyScale:
        return const ColorFilter.matrix(<double>[
          0.2126,
          0.7152,
          0.0722,
          0,
          0,
          0.2126,
          0.7152,
          0.0722,
          0,
          0,
          0.2126,
          0.7152,
          0.0722,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
        ]);
      case FilterType.brightness:
        return const ColorFilter.matrix(<double>[
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
        ]);
      case FilterType.quantization:
        return const ColorFilter.matrix(<double>[
          0.5,
          0.5,
          0.5,
          0,
          0,
          0.5,
          0.5,
          0.5,
          0,
          0,
          0.5,
          0.5,
          0.5,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
        ]);
      case FilterType.vintage:
        return const ColorFilter.matrix(<double>[
          0.6,
          0.4,
          0,
          0,
          0,
          0.3,
          0.7,
          0,
          0,
          0,
          0.3,
          0.3,
          0.3,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
        ]);
      case FilterType.blackAndWhite:
        return const ColorFilter.matrix(<double>[
          0.2126,
          0.7152,
          0.0722,
          0,
          0,
          0.2126,
          0.7152,
          0.0722,
          0,
          0,
          0.2126,
          0.7152,
          0.0722,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
        ]);
      case FilterType.polaroid:
        return const ColorFilter.matrix(<double>[
          1.5,
          0,
          0,
          0,
          0,
          0,
          1.5,
          0,
          0,
          0,
          0,
          0,
          1.5,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
        ]);
      case FilterType.duotone:
        return duotoneFilter();

      case FilterType.warmVintage:
        return const ColorFilter.matrix(<double>[
          0.8,
          0,
          0,
          0,
          0,
          0.3,
          0.7,
          0,
          0,
          0,
          0.3,
          0.3,
          0.3,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
        ]);
      case FilterType.vignette:
        return const ColorFilter.matrix(<double>[
          0.7,
          0,
          0,
          0,
          0,
          0,
          0.7,
          0,
          0,
          0,
          0,
          0,
          0.7,
          0,
          0,
          0,
          0,
          0,
          0.8,
          0,
        ]);
      case FilterType.kodachrome:
        return const ColorFilter.matrix(<double>[
          1.2,
          -0.1,
          -0.1,
          0,
          0,
          -0.1,
          1.2,
          -0.1,
          0,
          0,
          -0.1,
          -0.1,
          1.2,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
        ]);
      case FilterType.technicolor:
        return const ColorFilter.matrix(<double>[
          1.2,
          0.1,
          0.1,
          0,
          0,
          0.1,
          1.2,
          0.1,
          0,
          0,
          0.1,
          0.1,
          1.2,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
        ]);
      case FilterType.lomo:
        return const ColorFilter.matrix(<double>[
          1.5,
          0,
          0,
          0,
          0,
          0,
          1.5,
          0,
          0,
          0,
          0,
          0,
          1.5,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
        ]);
      case FilterType.saturate:
        return const ColorFilter.matrix(<double>[
          1.2,
          0,
          0,
          0,
          0,
          0,
          1.2,
          0,
          0,
          0,
          0,
          0,
          1.2,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
        ]);
      case FilterType.amaro:
        return const ColorFilter.matrix(<double>[
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
        ]);
      default:
        return null;
    }
  }

  static ColorFilter duotoneFilter() {
    const List<double> matrix1 = [
      1,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
    ];

    const List<double> matrix2 = [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      1,
      0,
    ];

    return ColorFilter.matrix(<double>[
      matrix1[0] + matrix2[0],
      matrix1[1] + matrix2[1],
      matrix1[2] + matrix2[2],
      matrix1[3] + matrix2[3],
      matrix1[4] + matrix2[4],
      matrix1[5] + matrix2[5],
      matrix1[6] + matrix2[6],
      matrix1[7] + matrix2[7],
      matrix1[8] + matrix2[8],
      matrix1[9] + matrix2[9],
      matrix1[10] + matrix2[10],
      matrix1[11] + matrix2[11],
      matrix1[12] + matrix2[12],
      matrix1[13] + matrix2[13],
      matrix1[14] + matrix2[14],
      matrix1[15] + matrix2[15],
      matrix1[16] + matrix2[16],
      matrix1[17] + matrix2[17],
      matrix1[18] + matrix2[18],
      matrix1[19] + matrix2[19],
    ]);
  }
}
